#!/bin/bash
# usage pdf_via_unoconv file [file...]

files=( "$@" )
LOGFILE=pdf_via_unoconv.log
TEMP=`tempfile`

if [ "$#" -eq "0" ]
then
	echo "Usage:    $0 file [file...]"
	echo "          Converts files to pdfs"
	exit 1
fi

function ctrlc
{
	echo "Keyboard interrupt: CANCELLED. Success: $success Errors: $errors" | tee -a $LOGFILE
	exit 1
}

function not_started
{
	LISTENER=$1
	# check if listener is a unoconv (starting up)
	if ps ax | grep "$LISTENER" | grep unoconv >/dev/null 2>&1
	then 	echo "starting up..."
			return 0
	# check for soffice.bin
	elif ps ax | grep "soffice.bin" >/dev/null 2>&1
	then
		echo "started"
		return 1
	else
		echo "not started..."
		return 0
	fi
}

# start
date>$LOGFILE
trap ctrlc SIGQUIT
 
echo -n "Starting instance..." | tee -a $LOGFILE

unoconv --listener &
LISTENER=$!


COUNT=0;
while not_started $LISTENER
do echo "waiting..." 
	sleep 1
	COUNT=$((COUNT+1))
	if [[ "$COUNT" -eq "10" ]] 
	then 
		echo "Waited 10s but soffice not started, apparently. EXITING." | tee -a $LOGFILE
		exit 1
	fi
done

echo "ready" | tee -a $LOGFILE

errors=0
success=0
for f in "${files[@]}"
do
	echo -n "Doing $f..."
	echo "Doing $f" >>$LOGFILE

	if [ ! -e "$f" ] 
	then
		echo "does not exist!" | tee -a $LOGFILE
		errors=$((errors+1))
		continue
	fi

	if [ -e "${f%.*}.pdf" ] 
	then
		echo "${f%.*}.pdf exists already. Will NOT overwrite." | tee -a $LOGFILE
		errors=$((errors+1))
		continue
	fi
		
	if [[ "$f" = *pdf || "$f" = *PDF ]]
	then
		echo "Already a .pdf - nothing to do." | tee -a $LOGFILE
		success=$((errors+1))
		continue
	fi

	if unoconv "$f" 2>&1 >$TEMP
	then
		success=$((success+1))
		cat $TEMP >>$LOGFILE
		echo "OK" | tee -a $LOGFILE
	else
		# did user press ctrl-c?
		RESULT=$?
		[ "$RESULT" -eq "6" -o "$RESULT" -eq "130" ] && ctrlc || echo "XXXXX: $RESULT";

		errors=$((errors+1))
		cat $TEMP  | tee -a $LOGFILE
		echo "FAILED - See logs above." | tee -a $LOGFILE
		echo ""


	fi
	rm $TEMP 2>/dev/null
done


echo "" | tee -a $LOGFILE
if [ -e /proc/$LISTENER ]
then
	echo "Stopping listener instance" | tee -a $LOGFILE
	kill -15 $LISTENER
else
	echo "Leaving soffice instance - was not started by us"
fi
echo "" | tee -a $LOGFILE
echo "Success: $success Errors: $errors" | tee -a $LOGFILE


